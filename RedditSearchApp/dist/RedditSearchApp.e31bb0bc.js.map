{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","showMessage","reddit","results","output","forEach","post","imageSrc","preview","images","source","url","truncateText","title","selftext","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"RedditSearchApp.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// Reddit API Documentation: https://www.reddit.com/dev/api/\nexport default{\n    search: function(searchTerm, searchLimit, sortBy){\n        // console.log('Search....');\n        return fetch(\n            `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n        )\n            .then(res => res.json())\n            .then(data => data.data.children.map(data => \n            data.data))\n            .catch(err => console.log(err));\n    }\n};","import reddit from './redditapi';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\n// Form Event Listener\nsearchForm.addEventListener('submit', e => {\n    // Get search term\n    const searchForm = searchInput.value;\n    // console.log(searchForm);\n    // Get sort\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n    // console.log(sortBy);\n    // Get limit\n    const searchLimit = document.getElementById('limit').value;\n    // console.log(searchLimit);\n    // Get search \n    const searchTerm = searchInput.value;\n    // console.log(searchTerm);\n    // Check input\n    if(searchTerm === ''){\n        // Show message\n        showMessage('Please add a search term.', 'alert-danger');\n    }\n\n    // Clear input\n    searchInput.value='';  // submit하고 나면 input값 삭제 \n\n    // Serach Reddit\n    reddit.search(searchTerm, searchLimit, sortBy)\n        .then(results => {\n            // console.log(results);\n            let output = '<div class=\"card-columns\">';\n            // Loop through posts\n            results.forEach(post => {\n                // Check for iamge\n                const imageSrc \n                = post.preview ? // post.preview가 존재하는지 \n                post.preview.images[0].source.url : \n                'https://images.ladbible.com/thumbnail?type=jpeg&url=http://beta.ems.ladbiblegroup.com/s3/content/b07ffa575ca19e0dd56f6c63d8f8916b.png&quality=70&width=720';\n\n                // Show results using card UI\n                // console.log(results); // Reddit API에서 뭘 가져올 수 있는지 이름은 뭔지 살펴보자. \n                output += `\n                <div class=\"card\">\n                <img src=\"${imageSrc}\" class=\"card-img-top\" alt=\"...\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">${truncateText(post.title, 50)}</h5>\n                  <p class=\"card-text\">${truncateText(post.selftext, 200)}</p>  \n                  <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n                  <hr>\n                  <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\n                  <span class=\"badge badge-dark\">Score: ${post.score}</span>\n                </div>\n              </div>\n                `;\n            });\n            output += '</div>';\n            document.getElementById('results').innerHTML = output;\n        });\n\n    e.preventDefault();\n});\n\n// Show message\nfunction showMessage(message, className){\n    // Create dev\n    const div = document.createElement('div');\n    // Add classes\n    div.className = `alert ${className}`;\n    // Add text\n    div.appendChild(document.createTextNode(message));\n    // Get parent \n    const searchContainer = document.getElementById('search-container');\n    // Get search\n    const search = document.getElementById('search');\n\n    // Insert message\n    searchContainer.insertBefore(div, search);\n\n    // Timeout alert\n    setTimeout(() => document.querySelector('.alert').remove(), 3000); // 3초 후 메시지 제거\n\n}\n\n// Truncate Text (ex. ${post.selftext} )\nfunction truncateText(text, limit){   \n    const shortened = text.indexOf(' ', limit); \n    if(shortened == -1) return text; \n    return (text.substring(0, shortened) + '...'); \n}"]}